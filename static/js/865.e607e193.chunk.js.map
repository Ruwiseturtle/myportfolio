{"version":3,"file":"static/js/865.e607e193.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/transform.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-computed.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs"],"sourcesContent":["import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.0.6\", `Attempting to mix Motion versions ${nextValue.version} with 12.0.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.0.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(element, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n"],"names":["setVariants","visualElement","variantLabels","reverse","forEach","key","variant","getVariant","setTarget","variantChildren","child","animationControls","hasMounted","subscribers","Set","controls","subscribe","add","delete","start","definition","transitionOverride","invariant","animations","push","animateVisualElement","Promise","all","set","Array","isArray","setValues","stop","values","value","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","Math","abs","binarySubdivide","backOut","backIn","reverseEasing","backInOut","mirrorEasing","anticipate","p","pow","isAnimatable","name","complex","test","startsWith","isNotNull","getFinalKeyframe","keyframes","_ref","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","length","undefined","BaseAnimation","constructor","autoplay","delay","type","repeatDelay","options","_objectWithoutProperties","_excluded","this","isStopped","hasAttemptedResolve","createdAt","time","now","_objectSpread","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","concat","current","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","ease","calcGeneratorVelocity","resolveValue","prevT","max","velocityPerSecond","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","sqrt","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","arguments","origin","target","state","done","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","generator","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","calcGeneratorDuration","maxGeneratorDuration","easing","generateLinearEasing","progress","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","isBezierDefinition","x1","y1","x2","y2","defaultOffset","arr","offset","remaining","offsetProgress","mixNumber","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","map","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","splice","frameloopDriver","update","passTimestamp","timestamp","frame","cancelFrame","frameData","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","element","KeyframeResolver$1","KeyframeResolver","onResolved","scheduleResolve","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","pipe","mix","resolvedDuration","totalDuration","play","pause","tick","sample","speed","round","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","Boolean","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","_a","complete","stopDriver","acceleratedValues","supportsWaapi","memo","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","DOMKeyframesResolver","owner","supportsLinearEasing","isWaapiSupportedEasing","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","mapEasingToNativeEasing","animate","fill","iterations","direction","startWaapiAnimation","pendingTimeline","attachTimeline","onfinish","playbackRate","playState","timeline","_this$options2","_excluded2","sampleTime","setWithVelocity","supports","HTMLElement","transformTemplate","getProps","has","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","from","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","GroupPlaybackControls","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","window","MotionHandoffAnimation","appearId","getOptimisedAppearId","addValueToWillChange","shouldReduceMotion","positionalKeys","animateVariant","resolveVariant","presenceContext","custom","getAnimation","getChildAnimations","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","resolvedDefinition","optimizedAppearDataAttribute","camelToDash","props","isKeyframesTarget","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","acos","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","process","clear","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","performance","keepAlive","immediate","frameSteps","requestAnimationFrame","clearTime","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","_target","isAnimationControls","shallowCompare","prev","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","extractEventInfo","event","point","pageX","y","pageY","addPointerEvent","isPrimaryPointer","addPointerInfo","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","source","originPoint","scale","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","drag","dragPropagation","onDragStart","setDragLock","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","_ref2","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariableName","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","depth","FlatTree","children","isDirty","addUniqueItem","removeItem","timeout","checkElapsed","resolveMotionValue","unwrappedValue","isMotionValue","isCustomValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","includes","roundPoint","maxDistance","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","press","_element","endEvent","success","useGlobalTarget","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","LazyContext","strict","MotionContext","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolveVariantFromProps","getValueAsType","translateAlias","numTransforms","transformPropOrder","buildHTMLStyles","hasTransformOrigin","valueAsType","numberValueTypes","transformString","transformIsDefault","valueIsDefault","trim","buildTransform","originZ","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","scrapeMotionValuesFromProps$1","charAt","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","valueTypes","dimensionValueTypes","color","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","jump","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","isNumericalString","isZeroValueString","find","testValueType","getAnimatableNone","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","getPropertyValue","SVGVisualElement","getAttribute","createDomVisualElement","motion","invalidTemplates","splitCSSVariableRegex","getVariableValue","token","fallback","match","exec","token1","token2","parseCSSVariable","trimmed","isCSSVariableToken","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","originType","findDimensionValueType","targetType","isNumOrPxType","noneKeyframeIndexes","animatableTemplate","analyseComplexValue","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureKeyframe","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","number","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","scaleZ","skew","translateZ","perspective","alpha","progressPercentage","int","zIndex","fillOpacity","strokeOpacity","numOctaves","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getValueState","setMotionValue","resolveFinalValueInKeyframes","item","input","isClamp","mixer","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","targetStats","indexes","var","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","combineFunctions","transformers","subscriptions","numSubscriptions","getSize","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","rgbUnit","clampRgbUnit","singleColorRegex","testProp","isNullish","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","useMotionValue","setLatest","useState","isCustomValueType","useCombineMotionValues","combineValues","updateValue","useTransform","inputRangeOrTransformer","outputRange","compute","useComputed","useImmediate","argOffset","inputValue","inputRange","useListTransform","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","runAll","finished","getAll","propName","setAll","newValue","methodName","onResolve","onReject","catch","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","resolution","points","numPoints","supportedWaapiEasing","every","cubicBezierAsString","segmentEasing","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","pointerType","onHoverStart","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","parentElement","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","onPressStart","cancelEvents","startPress","onPressEnd","onPointerEnd","onPointerUp","onPointerCancel","upEvent","cancelEvent","isElementKeyboardAccessible","any","toFromDifference","seconds","milliseconds"],"sourceRoot":""}